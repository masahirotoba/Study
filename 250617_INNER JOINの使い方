# これら2つのテーブルを結合する
postgres=# SELECT * FROM shohin;
 shohin_id |   shohin_mei   | shohin_bunrui | hanbai_tanka | shiire_tanka |  torokubi
-----------+----------------+---------------+--------------+--------------+------------
 0001      | Tシャツ        | 衣服          |         1000 |          500 | 2009-09-20
 0002      | 穴あけパンチ   | 事務用品      |          500 |          320 | 2009-09-11
 0003      | カッターシャツ | 衣服          |         4000 |         2800 |
 0004      | 包丁           | キッチン用品  |         3000 |         2800 | 2009-09-20
 0005      | 圧力鍋         | キッチン用品  |         6800 |         5000 | 2009-01-15
 0006      | フォーク       | キッチン用品  |          500 |              | 2009-09-20
 0007      | おろしがね     | キッチン用品  |          880 |          790 | 2008-04-28
 0008      | ボールペン     | 事務用品      |          100 |              | 2009-11-11
(8 行)

postgres=# SELECT * FROM tenposhohin;
 tenpo_id | tenpo_mei | shohin_id | suryo
----------+-----------+-----------+-------
 000A     | 東京      | 0001      |    30
 000A     | 東京      | 0002      |    50
 000A     | 東京      | 0003      |    15
 000B     | 名古屋    | 0002      |    30
 000B     | 名古屋    | 0003      |   120
 000B     | 名古屋    | 0004      |    20
 000B     | 名古屋    | 0006      |    10
 000B     | 名古屋    | 0007      |    40
 000C     | 大阪      | 0003      |    20
 000C     | 大阪      | 0004      |    50
 000C     | 大阪      | 0006      |    90
 000C     | 大阪      | 0007      |    70
 000D     | 福岡      | 0001      |   100
(13 行)

# 内部結合で書き直したモノ
postgres=# SELECT TS.tenpo_id, TS.tenpo_mei, S.shohin_mei,
postgres-# S.hanbai_tanka
postgres-# FROM tenposhohin AS TS INNER JOIN shohin AS S
postgres-# ON TS.shohin_id = S.shohin_id;
 tenpo_id | tenpo_mei |   shohin_mei   | hanbai_tanka
----------+-----------+----------------+--------------
 000A     | 東京      | Tシャツ        |         1000
 000A     | 東京      | 穴あけパンチ   |          500
 000A     | 東京      | カッターシャツ |         4000
 000B     | 名古屋    | 穴あけパンチ   |          500
 000B     | 名古屋    | カッターシャツ |         4000
 000B     | 名古屋    | 包丁           |         3000
 000B     | 名古屋    | フォーク       |          500
 000B     | 名古屋    | おろしがね     |          880
 000C     | 大阪      | カッターシャツ |         4000
 000C     | 大阪      | 包丁           |         3000
 000C     | 大阪      | フォーク       |          500
 000C     | 大阪      | おろしがね     |          880
 000D     | 福岡      | Tシャツ        |         1000
(13 行)


# これが動くのはなぜだろうか
　→　SQLでは単一テーブルを参照する場合でも、テーブル名.カラム名の記法が使用できる！
postgres=# SELECT shohin.shohin_id, shohin.shohin_mei FROM shohin;
 shohin_id |   shohin_mei
-----------+----------------
 0001      | Tシャツ
 0002      | 穴あけパンチ
 0003      | カッターシャツ
 0004      | 包丁
 0005      | 圧力鍋
 0006      | フォーク
 0007      | おろしがね
 0008      | ボールペン
(8 行)

# これはダメ
　→　テーブル名.カラム名の記法を使う場合でも、FROM句でそのテーブルを明示する必要がある
postgres=# SELECT shohin.shohin_id, shohin.shohin_mei;
ERROR:  テーブル"shohin"用のFROM句エントリがありません
行 1: SELECT shohin.shohin_id, shohin.shohin_mei;
             ^

# これでもきちんと動いた（テーブル名.カラム名で書いてみた）
postgres=# SELECT tenposhohin.tenpo_id, tenposhohin.tenpo_mei, shohin.shohin_id, shohin.shohin_mei, shohin.hanbai_tanka
postgres-# FROM tenposhohin INNER JOIN shohin
postgres-# ON tenposhohin.shohin_id = shohin.shohin_id;
 tenpo_id | tenpo_mei | shohin_id |   shohin_mei   | hanbai_tanka
----------+-----------+-----------+----------------+--------------
 000A     | 東京      | 0001      | Tシャツ        |         1000
 000A     | 東京      | 0002      | 穴あけパンチ   |          500
 000A     | 東京      | 0003      | カッターシャツ |         4000
 000B     | 名古屋    | 0002      | 穴あけパンチ   |          500
 000B     | 名古屋    | 0003      | カッターシャツ |         4000
 000B     | 名古屋    | 0004      | 包丁           |         3000
 000B     | 名古屋    | 0006      | フォーク       |          500
 000B     | 名古屋    | 0007      | おろしがね     |          880
 000C     | 大阪      | 0003      | カッターシャツ |         4000
 000C     | 大阪      | 0004      | 包丁           |         3000
 000C     | 大阪      | 0006      | フォーク       |          500
 000C     | 大阪      | 0007      | おろしがね     |          880
 000D     | 福岡      | 0001      | Tシャツ        |         1000
(13 行)

# もう少しシンプルにしてみる（在庫を調べるイメージ）
postgres=# SELECT tenposhohin.tenpo_mei, shohin.shohin_mei, tenposhohin.suryo
postgres-# FROM tenposhohin INNER JOIN shohin
postgres-# ON tenposhohin.shohin_id = shohin.shohin_id;
 tenpo_mei |   shohin_mei   | suryo
-----------+----------------+-------
 東京      | Tシャツ        |    30
 東京      | 穴あけパンチ   |    50
 東京      | カッターシャツ |    15
 名古屋    | 穴あけパンチ   |    30
 名古屋    | カッターシャツ |   120
 名古屋    | 包丁           |    20
 名古屋    | フォーク       |    10
 名古屋    | おろしがね     |    40
 大阪      | カッターシャツ |    20
 大阪      | 包丁           |    50
 大阪      | フォーク       |    90
 大阪      | おろしがね     |    70
 福岡      | Tシャツ        |   100
(13 行)


# 順番を逆にしてみる
  →　INNER JOINでは順序は関係ない
postgres=# SELECT tenposhohin.tenpo_mei, shohin.shohin_mei, tenposhohin.suryo
postgres-# FROM shohin INNER JOIN tenposhohin
postgres-# ON tenposhohin.shohin_id = shohin.shohin_id;
 tenpo_mei |   shohin_mei   | suryo
-----------+----------------+-------
 東京      | Tシャツ        |    30
 東京      | 穴あけパンチ   |    50
 東京      | カッターシャツ |    15
 名古屋    | 穴あけパンチ   |    30
 名古屋    | カッターシャツ |   120
 名古屋    | 包丁           |    20
 名古屋    | フォーク       |    10
 名古屋    | おろしがね     |    40
 大阪      | カッターシャツ |    20
 大阪      | 包丁           |    50
 大阪      | フォーク       |    90
 大阪      | おろしがね     |    70
 福岡      | Tシャツ        |   100
(13 行)

# まとめ
・テーブル名.カラム名の記法を覚えた
・結合キーはSELECT句の中に書かなくてもOK
・あくまで結び付けるためのモノで、出力したい列名だけSELECT句に書けばいい
